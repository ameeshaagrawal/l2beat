{
  "name": "socket",
  "chain": "optimism",
  "blockNumber": 116991343,
  "configHash": "0x43fe74dd14aef1a30b172265f14633f5bdc3798aa22a8354e51ed9c4078673c9",
  "version": 3,
  "contracts": [
    {
      "name": "Socket",
      "address": "0x301bD265F0b3C16A58CbDb886Ad87842E3A1c0a4",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1691397327,
      "values": {
        "capacitorFactory__": "0x8668293Ba7De23E2E8e9dd5368E6e4EB778eE7d0",
        "chainSlug": 10,
        "executionManager__": "0xFd1256602f99A8Cb2b43114E41AF4ca0B4c7e47f",
        "globalMessageCount": 66954,
        "hasher__": "0x3e89c061BF570B0678C7792BBfFC6bAA9d580Dc5",
        "nominee": "0x0000000000000000000000000000000000000000",
        "owner": "0x5fD7D0d6b91CC4787Bcb86ca47e0Bd4ea0346d34",
        "transmitManager__": "0x7398dA0704ee25025D300a96197788378dcB1470",
        "version": "0x484f1c5889188a0a81068ce8c49d8f7c3b3f1b0c1723b50ebd656a8d4f99e356"
      },
      "errors": {
        "inboundSwitchboards": "bad response (status=413, headers={\"access-control-allow-credentials\":\"true\",\"access-control-allow-headers\":\"Content-Type,Authorization,User-Agent\",\"access-control-allow-methods\":\"GET, POST, OPTIONS\",\"access-control-allow-origin\":\"\",\"content-type\":\"application/json\",\"vary\":\"Accept-Encoding\",\"x-node-id\":\"optimistic-ethereum_optimism_sin\",\"date\":\"Mon, 04 Mar 2024 19:44:26 GMT\",\"content-length\":\"102\",\"connection\":\"close\"}, body=\"{\\\"jsonrpc\\\":\\\"2.0\\\",\\\"id\\\":59,\\\"error\\\":{\\\"code\\\":-32614,\\\"message\\\":\\\"eth_getLogs is limited to a 10,000 range\\\"}}\", requestBody=\"{\\\"method\\\":\\\"eth_getLogs\\\",\\\"params\\\":[{\\\"fromBlock\\\":\\\"0x0\\\",\\\"toBlock\\\":\\\"0x6f9256f\\\",\\\"address\\\":\\\"0x301bd265f0b3c16a58cbdb886ad87842e3a1c0a4\\\",\\\"topics\\\":[\\\"0xebaba46465001886e6218eb8da227160a320362ee4aab240ead702addafe55ba\\\"]}],\\\"id\\\":59,\\\"jsonrpc\\\":\\\"2.0\\\"}\", requestMethod=\"POST\", url=\"https://methodical-shy-voice.optimism.quiknode.pro/975c93809eef6ed7475a562706a2ed153e5a641d/\", code=SERVER_ERROR, version=web/5.7.1)",
        "outboundSwitchboards": "bad response (status=413, headers={\"access-control-allow-credentials\":\"true\",\"access-control-allow-headers\":\"Content-Type,Authorization,User-Agent\",\"access-control-allow-methods\":\"GET, POST, OPTIONS\",\"access-control-allow-origin\":\"\",\"content-type\":\"application/json\",\"vary\":\"Accept-Encoding\",\"x-node-id\":\"optimistic-ethereum_optimism_sin\",\"date\":\"Mon, 04 Mar 2024 19:44:26 GMT\",\"content-length\":\"102\",\"connection\":\"close\"}, body=\"{\\\"jsonrpc\\\":\\\"2.0\\\",\\\"id\\\":60,\\\"error\\\":{\\\"code\\\":-32614,\\\"message\\\":\\\"eth_getLogs is limited to a 10,000 range\\\"}}\", requestBody=\"{\\\"method\\\":\\\"eth_getLogs\\\",\\\"params\\\":[{\\\"fromBlock\\\":\\\"0x0\\\",\\\"toBlock\\\":\\\"0x6f9256f\\\",\\\"address\\\":\\\"0x301bd265f0b3c16a58cbdb886ad87842e3a1c0a4\\\",\\\"topics\\\":[\\\"0xebaba46465001886e6218eb8da227160a320362ee4aab240ead702addafe55ba\\\"]}],\\\"id\\\":60,\\\"jsonrpc\\\":\\\"2.0\\\"}\", requestMethod=\"POST\", url=\"https://methodical-shy-voice.optimism.quiknode.pro/975c93809eef6ed7475a562706a2ed153e5a641d/\", code=SERVER_ERROR, version=web/5.7.1)",
        "plugs": "bad response (status=413, headers={\"access-control-allow-credentials\":\"true\",\"access-control-allow-headers\":\"Content-Type,Authorization,User-Agent\",\"access-control-allow-methods\":\"GET, POST, OPTIONS\",\"access-control-allow-origin\":\"\",\"content-type\":\"application/json\",\"vary\":\"Accept-Encoding\",\"x-node-id\":\"optimistic-ethereum_optimism_sin\",\"date\":\"Mon, 04 Mar 2024 19:44:26 GMT\",\"content-length\":\"102\",\"connection\":\"close\"}, body=\"{\\\"jsonrpc\\\":\\\"2.0\\\",\\\"id\\\":61,\\\"error\\\":{\\\"code\\\":-32614,\\\"message\\\":\\\"eth_getLogs is limited to a 10,000 range\\\"}}\", requestBody=\"{\\\"method\\\":\\\"eth_getLogs\\\",\\\"params\\\":[{\\\"fromBlock\\\":\\\"0x0\\\",\\\"toBlock\\\":\\\"0x6f9256f\\\",\\\"address\\\":\\\"0x301bd265f0b3c16a58cbdb886ad87842e3a1c0a4\\\",\\\"topics\\\":[\\\"0xebaba46465001886e6218eb8da227160a320362ee4aab240ead702addafe55ba\\\"]}],\\\"id\\\":61,\\\"jsonrpc\\\":\\\"2.0\\\"}\", requestMethod=\"POST\", url=\"https://methodical-shy-voice.optimism.quiknode.pro/975c93809eef6ed7475a562706a2ed153e5a641d/\", code=SERVER_ERROR, version=web/5.7.1)"
      },
      "derivedName": "Socket"
    },
    {
      "name": "Hasher",
      "address": "0x3e89c061BF570B0678C7792BBfFC6bAA9d580Dc5",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1691397315,
      "values": {
        "nominee": "0x0000000000000000000000000000000000000000",
        "owner": "0x5fD7D0d6b91CC4787Bcb86ca47e0Bd4ea0346d34"
      }
    },
    {
      "name": "TransmitManager",
      "address": "0x7398dA0704ee25025D300a96197788378dcB1470",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1691397337,
      "values": {
        "chainSlug": 10,
        "nominee": "0x0000000000000000000000000000000000000000",
        "owner": "0x5fD7D0d6b91CC4787Bcb86ca47e0Bd4ea0346d34",
        "signatureVerifier__": "0xbb1f202095BE99000038D8d207C7E6f0F85a3925",
        "socket__": "0x301bD265F0b3C16A58CbDb886Ad87842E3A1c0a4"
      }
    },
    {
      "name": "CapacitorFactory",
      "address": "0x8668293Ba7De23E2E8e9dd5368E6e4EB778eE7d0",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1691397319,
      "values": {
        "maxAllowedPacketLength": 10,
        "minAllowedPacketLength": 1,
        "nominee": "0x0000000000000000000000000000000000000000",
        "owner": "0x5fD7D0d6b91CC4787Bcb86ca47e0Bd4ea0346d34"
      }
    },
    {
      "name": "SignatureVerifier",
      "address": "0xbb1f202095BE99000038D8d207C7E6f0F85a3925",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1691397309,
      "values": {
        "nominee": "0x0000000000000000000000000000000000000000",
        "owner": "0x5fD7D0d6b91CC4787Bcb86ca47e0Bd4ea0346d34"
      }
    },
    {
      "name": "ExecutionManager",
      "address": "0xFd1256602f99A8Cb2b43114E41AF4ca0B4c7e47f",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1691397333,
      "values": {
        "chainSlug": 10,
        "nominee": "0x0000000000000000000000000000000000000000",
        "owner": "0x5fD7D0d6b91CC4787Bcb86ca47e0Bd4ea0346d34",
        "signatureVerifier__": "0xbb1f202095BE99000038D8d207C7E6f0F85a3925",
        "socket__": "0x301bD265F0b3C16A58CbDb886Ad87842E3A1c0a4"
      }
    }
  ],
  "eoas": ["0x5fD7D0d6b91CC4787Bcb86ca47e0Bd4ea0346d34"],
  "abis": {
    "0x301bD265F0b3C16A58CbDb886Ad87842E3A1c0a4": [
      "constructor(uint32 chainSlug_, address hasher_, address capacitorFactory_, address owner_, string version_)",
      "error ErrInSourceValidation()",
      "error InvalidCapacitorAddress()",
      "error InvalidConnection()",
      "error InvalidPacketId()",
      "error InvalidProof()",
      "error InvalidTokenAddress()",
      "error InvalidTransmitter()",
      "error LowGasLimit()",
      "error MessageAlreadyExecuted()",
      "error NoPermit(bytes32 role)",
      "error NotExecutor()",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error PacketNotProposed()",
      "error PlugDisconnected()",
      "error SwitchboardExists()",
      "error UnequalArrayLengths()",
      "error VerificationFailed()",
      "error ZeroAddress()",
      "event CapacitorFactorySet(address capacitorFactory)",
      "event ExecutionManagerSet(address executionManager)",
      "event ExecutionSuccess(bytes32 msgId)",
      "event HasherSet(address hasher)",
      "event MessageOutbound(uint32 localChainSlug, address localPlug, uint32 dstChainSlug, address dstPlug, bytes32 msgId, uint256 minMsgGasLimit, bytes32 executionParams, bytes32 transmissionParams, bytes payload, tuple(uint128 transmissionFees, uint128 executionFee, uint128 switchboardFees) fees)",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event PacketProposed(address indexed transmitter, bytes32 indexed packetId, uint256 proposalCount, bytes32 root, address switchboard)",
      "event PlugConnected(address plug, uint32 siblingChainSlug, address siblingPlug, address inboundSwitchboard, address outboundSwitchboard, address capacitor, address decapacitor)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "event Sealed(address indexed transmitter, bytes32 indexed packetId, uint256 batchSize, bytes32 root, bytes signature)",
      "event SiblingSwitchboardUpdated(address switchboard, uint32 siblingChainSlug, address siblingSwitchboard)",
      "event SwitchboardAdded(address switchboard, uint32 siblingChainSlug, address capacitor, address decapacitor, uint256 maxPacketLength, uint256 capacitorType)",
      "event TransmitManagerSet(address transmitManager)",
      "function capacitorFactory__() view returns (address)",
      "function capacitorToSlug(address) view returns (uint32)",
      "function capacitors__(address, uint32) view returns (address)",
      "function chainSlug() view returns (uint32)",
      "function claimOwner()",
      "function connect(uint32 siblingChainSlug_, address siblingPlug_, address inboundSwitchboard_, address outboundSwitchboard_)",
      "function decapacitors__(address, uint32) view returns (address)",
      "function execute(tuple(bytes32 packetId, uint256 proposalCount, uint256 executionGasLimit, bytes decapacitorProof, bytes signature) executionDetails_, tuple(bytes32 msgId, uint256 executionFee, uint256 minMsgGasLimit, bytes32 executionParams, bytes payload) messageDetails_) payable",
      "function executionManager__() view returns (address)",
      "function getMinFees(uint256 minMsgGasLimit_, uint256 payloadSize_, bytes32 executionParams_, bytes32 transmissionParams_, uint32 siblingChainSlug_, address plug_) view returns (uint256 totalFees)",
      "function getPlugConfig(address plugAddress_, uint32 siblingChainSlug_) view returns (address siblingPlug, address inboundSwitchboard__, address outboundSwitchboard__, address capacitor__, address decapacitor__)",
      "function globalMessageCount() view returns (uint64)",
      "function grantBatchRole(bytes32[] roleNames_, uint32[] slugs_, address[] grantees_)",
      "function grantRole(bytes32 role_, address grantee_)",
      "function grantRoleWithSlug(bytes32 roleName_, uint32 chainSlug_, address grantee_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function hasRoleWithSlug(bytes32 roleName_, uint32 chainSlug_, address address_) view returns (bool)",
      "function hasher__() view returns (address)",
      "function isPacketProposed(bytes32 packetId_, uint256 proposalCount_, address switchboard_) view returns (bool)",
      "function messageExecuted(bytes32) view returns (bool)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function outbound(uint32 siblingChainSlug_, uint256 minMsgGasLimit_, bytes32 executionParams_, bytes32 transmissionParams_, bytes payload_) payable returns (bytes32 msgId)",
      "function owner() view returns (address)",
      "function packetIdRoots(bytes32, uint256, address) view returns (bytes32)",
      "function proposalCount(bytes32) view returns (uint256)",
      "function proposeForSwitchboard(bytes32 packetId_, bytes32 root_, address switchboard_, bytes signature_) payable",
      "function registerSwitchboardForSibling(uint32 siblingChainSlug_, uint256 maxPacketLength_, uint256 capacitorType_, address siblingSwitchboard_) returns (address capacitor, address decapacitor)",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function revokeBatchRole(bytes32[] roleNames_, uint32[] slugs_, address[] grantees_)",
      "function revokeRole(bytes32 role_, address revokee_)",
      "function revokeRoleWithSlug(bytes32 roleName_, uint32 chainSlug_, address grantee_)",
      "function rootProposedAt(bytes32, uint256, address) view returns (uint256)",
      "function seal(uint256 batchSize_, address capacitorAddress_, bytes signature_) payable",
      "function setCapacitorFactory(address capacitorFactory_)",
      "function setExecutionManager(address executionManager_)",
      "function setHasher(address hasher_)",
      "function setTransmitManager(address transmitManager_)",
      "function transmitManager__() view returns (address)",
      "function useSiblingSwitchboard(uint32 siblingChainSlug_, address siblingSwitchboard_)",
      "function version() view returns (bytes32)"
    ],
    "0x3e89c061BF570B0678C7792BBfFC6bAA9d580Dc5": [
      "constructor(address owner_)",
      "error InvalidTokenAddress()",
      "error NoPermit(bytes32 role)",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error ZeroAddress()",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "function claimOwner()",
      "function grantRole(bytes32 role_, address grantee_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function packMessage(uint32 srcChainSlug_, address srcPlug_, uint32 dstChainSlug_, address dstPlug_, tuple(bytes32 msgId, uint256 executionFee, uint256 minMsgGasLimit, bytes32 executionParams, bytes payload) messageDetails_) pure returns (bytes32)",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function revokeRole(bytes32 role_, address revokee_)"
    ],
    "0x7398dA0704ee25025D300a96197788378dcB1470": [
      "constructor(address owner_, uint32 chainSlug_, address socket_, address signatureVerifier_)",
      "error InvalidNonce()",
      "error InvalidTokenAddress()",
      "error NoPermit(bytes32 role)",
      "error OnlyExecutionManager()",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error UnequalArrayLengths()",
      "error ZeroAddress()",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "event SignatureVerifierSet(address signatureVerifier)",
      "event TransmissionFeesSet(uint256 dstChainSlug, uint256 transmissionFees)",
      "function chainSlug() view returns (uint32)",
      "function checkTransmitter(uint32 siblingSlug_, bytes32 digest_, bytes signature_) view returns (address, bool)",
      "function claimOwner()",
      "function grantBatchRole(bytes32[] roleNames_, uint32[] slugs_, address[] grantees_)",
      "function grantRole(bytes32 role_, address grantee_)",
      "function grantRoleWithSlug(bytes32 roleName_, uint32 chainSlug_, address grantee_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function hasRoleWithSlug(bytes32 roleName_, uint32 chainSlug_, address address_) view returns (bool)",
      "function nextNonce(address) view returns (uint256)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function receiveFees(uint32) payable",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function revokeBatchRole(bytes32[] roleNames_, uint32[] slugs_, address[] grantees_)",
      "function revokeRole(bytes32 role_, address revokee_)",
      "function revokeRoleWithSlug(bytes32 roleName_, uint32 chainSlug_, address grantee_)",
      "function setSignatureVerifier(address signatureVerifier_)",
      "function setTransmissionFees(uint256 nonce_, uint32 dstChainSlug_, uint128 transmissionFees_, bytes signature_)",
      "function signatureVerifier__() view returns (address)",
      "function socket__() view returns (address)",
      "function withdrawFees(address withdrawTo_)"
    ],
    "0x8668293Ba7De23E2E8e9dd5368E6e4EB778eE7d0": [
      "constructor(address owner_, uint256 maxAllowedPacketLength_)",
      "error InvalidCapacitorType()",
      "error InvalidTokenAddress()",
      "error NoPermit(bytes32 role)",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error PacketLengthNotAllowed()",
      "error ZeroAddress()",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "function claimOwner()",
      "function deploy(uint256 capacitorType_, uint32, uint256 maxPacketLength_) returns (address, address)",
      "function grantRole(bytes32 role_, address grantee_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function maxAllowedPacketLength() view returns (uint256)",
      "function minAllowedPacketLength() view returns (uint256)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function revokeRole(bytes32 role_, address revokee_)"
    ],
    "0xbb1f202095BE99000038D8d207C7E6f0F85a3925": [
      "constructor(address owner_)",
      "error InvalidSigLength()",
      "error InvalidTokenAddress()",
      "error NoPermit(bytes32 role)",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error ZeroAddress()",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "function claimOwner()",
      "function grantRole(bytes32 role_, address grantee_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function recoverSigner(bytes32 digest_, bytes signature_) pure returns (address signer)",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function revokeRole(bytes32 role_, address revokee_)"
    ],
    "0xFd1256602f99A8Cb2b43114E41AF4ca0B4c7e47f": [
      "constructor(address owner_, uint32 chainSlug_, address socket_, address signatureVerifier_)",
      "error FeesTooHigh()",
      "error InsufficientFees()",
      "error InsufficientMsgValue()",
      "error InvalidMsgValue()",
      "error InvalidNonce()",
      "error InvalidTokenAddress()",
      "error MsgValueTooHigh()",
      "error MsgValueTooLow()",
      "error NoPermit(bytes32 role)",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error OnlySocket()",
      "error PayloadTooLarge()",
      "error UnequalArrayLengths()",
      "error ZeroAddress()",
      "event ExecutionFeesSet(uint256 siblingChainSlug, uint128 executionFees)",
      "event ExecutionFeesWithdrawn(address account, uint32 siblingChainSlug, uint256 amount)",
      "event MsgValueMaxThresholdSet(uint256 siblingChainSlug, uint256 msgValueMaxThresholdSet)",
      "event MsgValueMinThresholdSet(uint256 siblingChainSlug, uint256 msgValueMinThresholdSet)",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event RelativeNativeTokenPriceSet(uint256 siblingChainSlug, uint256 relativeNativeTokenPrice)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "event SwitchboardFeesWithdrawn(address switchboard, uint32 siblingChainSlug, uint256 amount)",
      "event TransmissionFeesWithdrawn(address transmitManager, uint32 siblingChainSlug, uint256 amount)",
      "function chainSlug() view returns (uint32)",
      "function claimOwner()",
      "function executionFees(uint32) view returns (uint128)",
      "function getExecutionTransmissionMinFees(uint256 minMsgGasLimit_, uint256 payloadSize_, bytes32 executionParams_, bytes32, uint32 siblingChainSlug_, address transmitManager_) view returns (uint128 minExecutionFee, uint128 transmissionFees)",
      "function getMinFees(uint256 gasLimit_, uint256 payloadSize_, bytes32 executionParams_, uint32 siblingChainSlug_) view returns (uint128 minExecutionFee)",
      "function grantBatchRole(bytes32[] roleNames_, uint32[] slugs_, address[] grantees_)",
      "function grantRole(bytes32 role_, address grantee_)",
      "function grantRoleWithSlug(bytes32 roleName_, uint32 chainSlug_, address grantee_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function hasRoleWithSlug(bytes32 roleName_, uint32 chainSlug_, address address_) view returns (bool)",
      "function isExecutor(bytes32 packedMessage, bytes sig) view returns (address executor, bool isValidExecutor)",
      "function msgValueMaxThreshold(uint32) view returns (uint256)",
      "function msgValueMinThreshold(uint32) view returns (uint256)",
      "function nextNonce(address) view returns (uint256)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function payAndCheckFees(uint256 minMsgGasLimit_, uint256 payloadSize_, bytes32 executionParams_, bytes32, uint32 siblingChainSlug_, uint128 switchboardFees_, uint128 verificationOverheadFees_, address transmitManager_, address switchboard_, uint256 maxPacketLength_) payable returns (uint128 executionFee, uint128 transmissionFees)",
      "function relativeNativeTokenPrice(uint32) view returns (uint256)",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function revokeBatchRole(bytes32[] roleNames_, uint32[] slugs_, address[] grantees_)",
      "function revokeRole(bytes32 role_, address revokee_)",
      "function revokeRoleWithSlug(bytes32 roleName_, uint32 chainSlug_, address grantee_)",
      "function setExecutionFees(uint256 nonce_, uint32 siblingChainSlug_, uint128 executionFees_, bytes signature_)",
      "function setMsgValueMaxThreshold(uint256 nonce_, uint32 siblingChainSlug_, uint256 msgValueMaxThreshold_, bytes signature_)",
      "function setMsgValueMinThreshold(uint256 nonce_, uint32 siblingChainSlug_, uint256 msgValueMinThreshold_, bytes signature_)",
      "function setRelativeNativeTokenPrice(uint256 nonce_, uint32 siblingChainSlug_, uint256 relativeNativeTokenPrice_, bytes signature_)",
      "function setTransmissionMinFees(uint32 remoteChainSlug_, uint128 fees_)",
      "function signatureVerifier__() view returns (address)",
      "function socket__() view returns (address)",
      "function totalExecutionAndTransmissionFees(uint32) view returns (uint128 totalExecutionFees, uint128 totalTransmissionFees)",
      "function totalSwitchboardFees(address, uint32) view returns (uint128)",
      "function transmissionMinFees(address, uint32) view returns (uint128)",
      "function updateExecutionFees(address, uint128, bytes32) view",
      "function verifyParams(bytes32 executionParams_, uint256 msgValue_) pure",
      "function withdrawExecutionFees(uint32 siblingChainSlug_, uint128 amount_, address withdrawTo_)",
      "function withdrawSwitchboardFees(uint32 siblingChainSlug_, address switchboard_, uint128 amount_)",
      "function withdrawTransmissionFees(uint32 siblingChainSlug_, uint128 amount_)"
    ]
  }
}
