{
  "name": "socket",
  "chain": "arbitrum",
  "blockNumber": 187105946,
  "configHash": "0x044d86d4e1a6c99763e69dd23101c374327eb76a9583b823125d083e3a096a6e",
  "version": 3,
  "contracts": [
    {
      "name": "L2CustomGateway",
      "address": "0x096760F208390250649E3e8763348E783AEF5562",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x190274fEa8f30e3f48CE43aDCBd9a74110118284",
        "admin": "0xd570aCE65C43af47101fC6250FD6fC63D1c22a86"
      },
      "implementations": ["0x190274fEa8f30e3f48CE43aDCBd9a74110118284"],
      "sinceTimestamp": 1623867828,
      "values": {
        "counterpartGateway": "0xcEe284F754E854890e311e3280b767F80797180d",
        "exitNum": 16222,
        "router": "0x5288c571Fd7aD117beA99bF60FE0846C4E84F933"
      }
    },
    {
      "name": "L2ERC20Gateway",
      "address": "0x09e9222E96E7B4AE2a407B98d48e330053351EEe",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x1DCf7D03574fbC7C205F41f2e116eE094a652e93",
        "admin": "0xd570aCE65C43af47101fC6250FD6fC63D1c22a86"
      },
      "implementations": ["0x1DCf7D03574fbC7C205F41f2e116eE094a652e93"],
      "sinceTimestamp": 1623784105,
      "values": {
        "beaconProxyFactory": "0x3fE38087A94903A9D946fa1915e1772fe611000f",
        "cloneableProxyHash": "0x4b11cb57b978697e0aec0c18581326376d6463fd3f6699cbe78ee5935617082d",
        "counterpartGateway": "0xa3A7B6F88361F48403514059F1F16C8E78d60EeC",
        "exitNum": 18056,
        "router": "0x5288c571Fd7aD117beA99bF60FE0846C4E84F933"
      }
    },
    {
      "name": "ExecutionManager",
      "address": "0x0a1040C23bc8d04669A118A27433D5B379C2D381",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1691397318,
      "values": {
        "chainSlug": 42161,
        "nominee": "0x0000000000000000000000000000000000000000",
        "owner": "0x5fD7D0d6b91CC4787Bcb86ca47e0Bd4ea0346d34",
        "signatureVerifier__": "0x9879a2b15722374243843DDdb79e5E6872aA74B8",
        "socket__": "0x37cc674582049b579571E2fFd890a4d99355f6Ba"
      }
    },
    {
      "name": "ClonableBeaconProxy",
      "address": "0x2f2a2543B76A4166549F7aaB2e75Bef0aefC5B0f",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1623867469
    },
    {
      "name": "Socket",
      "address": "0x37cc674582049b579571E2fFd890a4d99355f6Ba",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1691397315,
      "values": {
        "capacitorFactory__": "0xBce4Cd69FeFEdb6eb076CF67E55Bae858567136a",
        "chainSlug": 42161,
        "executionManager__": "0x0a1040C23bc8d04669A118A27433D5B379C2D381",
        "globalMessageCount": 126982,
        "hasher__": "0xcDA819182c2BBE351644eD5D429280ab98004B4e",
        "nominee": "0x0000000000000000000000000000000000000000",
        "owner": "0x5fD7D0d6b91CC4787Bcb86ca47e0Bd4ea0346d34",
        "transmitManager__": "0xd648A4f9db4AA872985b35B9ABB9Be642c0D7f2e",
        "version": "0x484f1c5889188a0a81068ce8c49d8f7c3b3f1b0c1723b50ebd656a8d4f99e356"
      },
      "errors": {
        "inboundSwitchboards": "bad response (status=413, headers={\"access-control-allow-credentials\":\"true\",\"access-control-allow-headers\":\"Content-Type,Authorization,User-Agent\",\"access-control-allow-methods\":\"GET, POST, OPTIONS\",\"access-control-allow-origin\":\"\",\"content-type\":\"application/json\",\"vary\":\"Accept-Encoding\",\"x-node-id\":\"arbitrum_arbitrum-mainnet_fra\",\"date\":\"Mon, 04 Mar 2024 19:42:11 GMT\",\"content-length\":\"103\",\"connection\":\"close\"}, body=\"{\\\"jsonrpc\\\":\\\"2.0\\\",\\\"id\\\":134,\\\"error\\\":{\\\"code\\\":-32614,\\\"message\\\":\\\"eth_getLogs is limited to a 10,000 range\\\"}}\", requestBody=\"{\\\"method\\\":\\\"eth_getLogs\\\",\\\"params\\\":[{\\\"fromBlock\\\":\\\"0x0\\\",\\\"toBlock\\\":\\\"0xb27029a\\\",\\\"address\\\":\\\"0x37cc674582049b579571e2ffd890a4d99355f6ba\\\",\\\"topics\\\":[\\\"0xebaba46465001886e6218eb8da227160a320362ee4aab240ead702addafe55ba\\\"]}],\\\"id\\\":134,\\\"jsonrpc\\\":\\\"2.0\\\"}\", requestMethod=\"POST\", url=\"https://thrilling-fittest-cherry.arbitrum-mainnet.quiknode.pro/b6edd6e702f5f2fd0646a56a1ae7f78a244bb029/\", code=SERVER_ERROR, version=web/5.7.1)",
        "outboundSwitchboards": "bad response (status=413, headers={\"access-control-allow-credentials\":\"true\",\"access-control-allow-headers\":\"Content-Type,Authorization,User-Agent\",\"access-control-allow-methods\":\"GET, POST, OPTIONS\",\"access-control-allow-origin\":\"\",\"content-type\":\"application/json\",\"vary\":\"Accept-Encoding\",\"x-node-id\":\"arbitrum_arbitrum-mainnet_fra\",\"date\":\"Mon, 04 Mar 2024 19:42:11 GMT\",\"content-length\":\"103\",\"connection\":\"close\"}, body=\"{\\\"jsonrpc\\\":\\\"2.0\\\",\\\"id\\\":135,\\\"error\\\":{\\\"code\\\":-32614,\\\"message\\\":\\\"eth_getLogs is limited to a 10,000 range\\\"}}\", requestBody=\"{\\\"method\\\":\\\"eth_getLogs\\\",\\\"params\\\":[{\\\"fromBlock\\\":\\\"0x0\\\",\\\"toBlock\\\":\\\"0xb27029a\\\",\\\"address\\\":\\\"0x37cc674582049b579571e2ffd890a4d99355f6ba\\\",\\\"topics\\\":[\\\"0xebaba46465001886e6218eb8da227160a320362ee4aab240ead702addafe55ba\\\"]}],\\\"id\\\":135,\\\"jsonrpc\\\":\\\"2.0\\\"}\", requestMethod=\"POST\", url=\"https://thrilling-fittest-cherry.arbitrum-mainnet.quiknode.pro/b6edd6e702f5f2fd0646a56a1ae7f78a244bb029/\", code=SERVER_ERROR, version=web/5.7.1)",
        "plugs": "bad response (status=413, headers={\"access-control-allow-credentials\":\"true\",\"access-control-allow-headers\":\"Content-Type,Authorization,User-Agent\",\"access-control-allow-methods\":\"GET, POST, OPTIONS\",\"access-control-allow-origin\":\"\",\"content-type\":\"application/json\",\"vary\":\"Accept-Encoding\",\"x-node-id\":\"arbitrum_arbitrum-mainnet_fra\",\"date\":\"Mon, 04 Mar 2024 19:42:11 GMT\",\"content-length\":\"103\",\"connection\":\"close\"}, body=\"{\\\"jsonrpc\\\":\\\"2.0\\\",\\\"id\\\":136,\\\"error\\\":{\\\"code\\\":-32614,\\\"message\\\":\\\"eth_getLogs is limited to a 10,000 range\\\"}}\", requestBody=\"{\\\"method\\\":\\\"eth_getLogs\\\",\\\"params\\\":[{\\\"fromBlock\\\":\\\"0x0\\\",\\\"toBlock\\\":\\\"0xb27029a\\\",\\\"address\\\":\\\"0x37cc674582049b579571e2ffd890a4d99355f6ba\\\",\\\"topics\\\":[\\\"0xebaba46465001886e6218eb8da227160a320362ee4aab240ead702addafe55ba\\\"]}],\\\"id\\\":136,\\\"jsonrpc\\\":\\\"2.0\\\"}\", requestMethod=\"POST\", url=\"https://thrilling-fittest-cherry.arbitrum-mainnet.quiknode.pro/b6edd6e702f5f2fd0646a56a1ae7f78a244bb029/\", code=SERVER_ERROR, version=web/5.7.1)"
      },
      "derivedName": "Socket"
    },
    {
      "name": "WBTC lyra Vault",
      "address": "0x3D20c6A2b719129af175E0ff7B1875DEb360896f",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1704715871,
      "values": {
        "nominee": "0x0000000000000000000000000000000000000000",
        "owner": "0x5fD7D0d6b91CC4787Bcb86ca47e0Bd4ea0346d34",
        "token__": "0x2f2a2543B76A4166549F7aaB2e75Bef0aefC5B0f"
      },
      "derivedName": "Vault"
    },
    {
      "name": "BeaconProxyFactory",
      "address": "0x3fE38087A94903A9D946fa1915e1772fe611000f",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1623784070,
      "values": {
        "beacon": "0xE72ba9418b5f2Ce0A6a40501Fe77c6839Aa37333",
        "cloneableProxyHash": "0x4b11cb57b978697e0aec0c18581326376d6463fd3f6699cbe78ee5935617082d"
      }
    },
    {
      "name": "MultiSigWallet",
      "address": "0x4a9196b06f339Ad9F3Ee752C987b401F2E1E2718",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1630422336,
      "values": {
        "getConfirmationCount": [3, 1, 1, 1, 0],
        "getConfirmations": [
          [
            "0xf4B51B14b9EE30dc37EC970B50a486F37686E2a8",
            "0x61D5a4d5Bd270e59E9320243e574288e2a199fED",
            "0x4D915Dd2c56814BD3Db51a1dA35b302BCC9c8973"
          ],
          ["0x4D915Dd2c56814BD3Db51a1dA35b302BCC9c8973"],
          ["0x4D915Dd2c56814BD3Db51a1dA35b302BCC9c8973"],
          ["0x4D915Dd2c56814BD3Db51a1dA35b302BCC9c8973"],
          []
        ],
        "getOwners": [
          "0xf4B51B14b9EE30dc37EC970B50a486F37686E2a8",
          "0xEe5207d3c88562fc814496Af0845B34CFD4afc8c",
          "0x61D5a4d5Bd270e59E9320243e574288e2a199fED",
          "0x25bB61643e4881147E6aabb65e6DD45CF2904155",
          "0x4096a34E582664F969753b34dA6E72D55b3C85C1",
          "0x4D915Dd2c56814BD3Db51a1dA35b302BCC9c8973"
        ],
        "isConfirmed": [true, false, false, false, false],
        "MAX_OWNER_COUNT": 50,
        "owners": [
          "0xf4B51B14b9EE30dc37EC970B50a486F37686E2a8",
          "0xEe5207d3c88562fc814496Af0845B34CFD4afc8c",
          "0x61D5a4d5Bd270e59E9320243e574288e2a199fED",
          "0x25bB61643e4881147E6aabb65e6DD45CF2904155",
          "0x4096a34E582664F969753b34dA6E72D55b3C85C1"
        ],
        "required": 3,
        "transactionCount": 4,
        "transactions": [
          [
            "0xFd086bC7CD5C481DCC9C85ebE478A1C0b69FCbb9",
            0,
            "0x3c7c9b90000000000000000000000000489a8756c18c0b8b24ec2a2b9ff3d4d447f79bec",
            true
          ],
          [
            "0xFd086bC7CD5C481DCC9C85ebE478A1C0b69FCbb9",
            0,
            "0x3c7c9b900000000000000000000000001f14e38666cdd8e8975f9acc09e24e9a28fbc42d",
            false
          ],
          [
            "0xFd086bC7CD5C481DCC9C85ebE478A1C0b69FCbb9",
            0,
            "0x3c7c9b90000000000000000000000000fd681a9aa555391ef772c53144db8404aec76030",
            false
          ],
          [
            "0xFd086bC7CD5C481DCC9C85ebE478A1C0b69FCbb9",
            0,
            "0x3c7c9b9000000000000000000000000017865c33e40814d691663bc292b2f77000f94c34",
            false
          ],
          ["0x0000000000000000000000000000000000000000", 0, "0x", false]
        ]
      },
      "errors": {
        "getConfirmationCount": "Too many values. Update configuration to explore fully",
        "getConfirmations": "Too many values. Update configuration to explore fully",
        "isConfirmed": "Too many values. Update configuration to explore fully",
        "owners": "Too many values. Update configuration to explore fully",
        "transactions": "Too many values. Update configuration to explore fully"
      }
    },
    {
      "name": "L2GatewayRouter",
      "address": "0x5288c571Fd7aD117beA99bF60FE0846C4E84F933",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xe80eb0238029333e368e0bDDB7acDf1b9cb28278",
        "admin": "0xd570aCE65C43af47101fC6250FD6fC63D1c22a86"
      },
      "implementations": ["0xe80eb0238029333e368e0bDDB7acDf1b9cb28278"],
      "sinceTimestamp": 1623784105,
      "values": {
        "counterpartGateway": "0x72Ce9c846789fdB6fC1f34aC4AD25Dd9ef7031ef",
        "defaultGateway": "0x09e9222E96E7B4AE2a407B98d48e330053351EEe",
        "router": "0x0000000000000000000000000000000000000000"
      }
    },
    {
      "name": "ProxyAdmin",
      "address": "0x553ec478A66BE27Ba25A6bc5dB20AEc2eD6A1B4A",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1630425902,
      "values": {
        "owner": "0x4a9196b06f339Ad9F3Ee752C987b401F2E1E2718"
      }
    },
    {
      "name": "USDC lyra Vault",
      "address": "0x5e027ad442e031424b5a2C0ad6f656662Be32882",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1704715450,
      "values": {
        "nominee": "0x0000000000000000000000000000000000000000",
        "owner": "0x5fD7D0d6b91CC4787Bcb86ca47e0Bd4ea0346d34",
        "token__": "0xaf88d065e77c8cC2239327C5EDb3A432268e5831"
      },
      "derivedName": "Vault"
    },
    {
      "name": "L2WethGateway",
      "address": "0x6c411aD3E74De3E7Bd422b94A27770f5B86C623B",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x806421D09cDb253aa9d128a658e60c0B95eFFA01",
        "admin": "0xd570aCE65C43af47101fC6250FD6fC63D1c22a86"
      },
      "implementations": ["0x806421D09cDb253aa9d128a658e60c0B95eFFA01"],
      "sinceTimestamp": 1624913237,
      "values": {
        "counterpartGateway": "0xd92023E9d9911199a6711321D1277285e6d4e2db",
        "exitNum": 581,
        "l1Weth": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",
        "l2Weth": "0x82aF49447D8a07e3bd95BD0d56f35241523fBab1",
        "router": "0x5288c571Fd7aD117beA99bF60FE0846C4E84F933"
      }
    },
    {
      "name": "aeWETH",
      "address": "0x82aF49447D8a07e3bd95BD0d56f35241523fBab1",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x8b194bEae1d3e0788A1a35173978001ACDFba668",
        "admin": "0xd570aCE65C43af47101fC6250FD6fC63D1c22a86"
      },
      "implementations": ["0x8b194bEae1d3e0788A1a35173978001ACDFba668"],
      "sinceTimestamp": 1622346702,
      "values": {
        "decimals": 18,
        "DOMAIN_SEPARATOR": "0xac33225466df015cad7b0e1bf31afc69a49f20d95501a98d9644ad21163469a0",
        "l1Address": "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",
        "l2Gateway": "0x6c411aD3E74De3E7Bd422b94A27770f5B86C623B",
        "name": "Wrapped Ether",
        "symbol": "WETH",
        "totalSupply": "206774835132635346503676"
      }
    },
    {
      "name": "MasterMinter",
      "address": "0x8aFf09e2259cacbF4Fc4e3E53F3bf799EfEEab36",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1667248939,
      "values": {
        "getMinterManager": "0xaf88d065e77c8cC2239327C5EDb3A432268e5831",
        "owner": "0xEdC4ed529B990DD4fFB9Ed47b6c3e385A9dcdd0A"
      }
    },
    {
      "name": "WETH lyra Vault",
      "address": "0x8e9f58E6c206CB9C98aBb9F235E0f02D65dFc922",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1704715806,
      "values": {
        "nominee": "0x0000000000000000000000000000000000000000",
        "owner": "0x5fD7D0d6b91CC4787Bcb86ca47e0Bd4ea0346d34",
        "token__": "0x82aF49447D8a07e3bd95BD0d56f35241523fBab1"
      },
      "derivedName": "Vault"
    },
    {
      "name": "SignatureVerifier",
      "address": "0x9879a2b15722374243843DDdb79e5E6872aA74B8",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1691397307,
      "values": {
        "nominee": "0x0000000000000000000000000000000000000000",
        "owner": "0x5fD7D0d6b91CC4787Bcb86ca47e0Bd4ea0346d34"
      }
    },
    {
      "name": "FiatTokenV2_2",
      "address": "0xaf88d065e77c8cC2239327C5EDb3A432268e5831",
      "upgradeability": {
        "type": "ZeppelinOS proxy",
        "implementation": "0x86E721b43d4ECFa71119Dd38c0f938A75Fdb57B3",
        "admin": "0x2E0A67588cfBCAD40f9e4DD76052436190A77a68"
      },
      "implementations": ["0x86E721b43d4ECFa71119Dd38c0f938A75Fdb57B3"],
      "sinceTimestamp": 1667248932,
      "values": {
        "admin": "0x2E0A67588cfBCAD40f9e4DD76052436190A77a68",
        "blacklister": "0x13F2A44FaD26c2cc25d3e3b869364142ce5995Bb",
        "CANCEL_AUTHORIZATION_TYPEHASH": "0x158b0a9edf7a828aad02f63cd515c68ef2f50ba807396f6d12842833a1597429",
        "currency": "USD",
        "decimals": 6,
        "DOMAIN_SEPARATOR": "0x08d11903f8419e68b1b8721bcbe2e9fc68569122a77ef18c216f10b3b5112c78",
        "implementation": "0x86E721b43d4ECFa71119Dd38c0f938A75Fdb57B3",
        "masterMinter": "0x8aFf09e2259cacbF4Fc4e3E53F3bf799EfEEab36",
        "name": "USD Coin",
        "owner": "0xc7a599037fDa4Ff8029df9a042Af6053d061ebc9",
        "paused": false,
        "pauser": "0x36e3b4db327d9e66F5aE5A0200DCdbEF0D2E240B",
        "PERMIT_TYPEHASH": "0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
        "RECEIVE_WITH_AUTHORIZATION_TYPEHASH": "0xd099cc98ef71107a616c4f0f941f04c322d8e254fe26b3c6668db87aae413de8",
        "rescuer": "0x0000000000000000000000000000000000000000",
        "symbol": "USDC",
        "totalSupply": 1056123892671794,
        "TRANSFER_WITH_AUTHORIZATION_TYPEHASH": "0x7c7c6cdb67a18743f49ec6fa9b35f50d52ed05cbed4cc592e13b44501c1a2267",
        "version": "2"
      }
    },
    {
      "name": "USDT lyra Vault",
      "address": "0xb2Cb9aDA6e00118dA8E83a6A53dF1EC6331A60a6",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1705566298,
      "values": {
        "nominee": "0x0000000000000000000000000000000000000000",
        "owner": "0x5fD7D0d6b91CC4787Bcb86ca47e0Bd4ea0346d34",
        "token__": "0xFd086bC7CD5C481DCC9C85ebE478A1C0b69FCbb9"
      },
      "derivedName": "Vault"
    },
    {
      "name": "CapacitorFactory",
      "address": "0xBce4Cd69FeFEdb6eb076CF67E55Bae858567136a",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1691397312,
      "values": {
        "maxAllowedPacketLength": 10,
        "minAllowedPacketLength": 1,
        "nominee": "0x0000000000000000000000000000000000000000",
        "owner": "0x5fD7D0d6b91CC4787Bcb86ca47e0Bd4ea0346d34"
      }
    },
    {
      "name": "Hasher",
      "address": "0xcDA819182c2BBE351644eD5D429280ab98004B4e",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1691397309,
      "values": {
        "nominee": "0x0000000000000000000000000000000000000000",
        "owner": "0x5fD7D0d6b91CC4787Bcb86ca47e0Bd4ea0346d34"
      }
    },
    {
      "name": "UpgradeExecutor",
      "address": "0xCF57572261c7c2BCF21ffD220ea7d1a27D40A827",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x7A013834D54e9B22d1978aAe3aaDDC909Aa79115",
        "admin": "0xdb216562328215E010F819B5aBe947bad4ca961e"
      },
      "implementations": ["0x7A013834D54e9B22d1978aAe3aaDDC909Aa79115"],
      "sinceTimestamp": 1678968508,
      "values": {
        "ADMIN_ROLE": "0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
        "DEFAULT_ADMIN_ROLE": "0x0000000000000000000000000000000000000000000000000000000000000000",
        "EXECUTOR_ROLE": "0xd8aa0f3194971a2a116679f7c2090f6939c8d4e01a2a8d7e41d55e5351469e63"
      }
    },
    {
      "name": "ProxyAdmin",
      "address": "0xd570aCE65C43af47101fC6250FD6fC63D1c22a86",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1623784105,
      "values": {
        "owner": "0xCF57572261c7c2BCF21ffD220ea7d1a27D40A827"
      }
    },
    {
      "name": "TransmitManager",
      "address": "0xd648A4f9db4AA872985b35B9ABB9Be642c0D7f2e",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1691397322,
      "values": {
        "chainSlug": 42161,
        "nominee": "0x0000000000000000000000000000000000000000",
        "owner": "0x5fD7D0d6b91CC4787Bcb86ca47e0Bd4ea0346d34",
        "signatureVerifier__": "0x9879a2b15722374243843DDdb79e5E6872aA74B8",
        "socket__": "0x37cc674582049b579571E2fFd890a4d99355f6Ba"
      }
    },
    {
      "name": "ProxyAdmin",
      "address": "0xdb216562328215E010F819B5aBe947bad4ca961e",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1678968400,
      "values": {
        "owner": "0xCF57572261c7c2BCF21ffD220ea7d1a27D40A827"
      }
    },
    {
      "name": "UpgradeableBeacon",
      "address": "0xE72ba9418b5f2Ce0A6a40501Fe77c6839Aa37333",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1623784070,
      "values": {
        "implementation": "0x3f770Ac673856F105b586bb393d122721265aD46",
        "owner": "0xCF57572261c7c2BCF21ffD220ea7d1a27D40A827"
      }
    },
    {
      "name": "USDC.e lyra Vault",
      "address": "0xFB7B06538d837e4212D72E2A38e6c074F9076E0B",
      "upgradeability": {
        "type": "immutable"
      },
      "sinceTimestamp": 1704715596,
      "values": {
        "nominee": "0x0000000000000000000000000000000000000000",
        "owner": "0x5fD7D0d6b91CC4787Bcb86ca47e0Bd4ea0346d34",
        "token__": "0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8"
      },
      "derivedName": "Vault"
    },
    {
      "name": "ArbitrumExtension",
      "address": "0xFd086bC7CD5C481DCC9C85ebE478A1C0b69FCbb9",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0xf31e1AE27e7cd057C1D6795a5a083E0453D39B50",
        "admin": "0x553ec478A66BE27Ba25A6bc5dB20AEc2eD6A1B4A"
      },
      "implementations": ["0xf31e1AE27e7cd057C1D6795a5a083E0453D39B50"],
      "sinceTimestamp": 1630432123,
      "values": {
        "decimals": 6,
        "DOMAIN_SEPARATOR": "0xac9d14034394f4b1d4bb6a20191a30c20faf508b6c4670e931b954eb281b8a33",
        "l1Address": "0xdAC17F958D2ee523a2206206994597C13D831ec7",
        "l2Gateway": "0x096760F208390250649E3e8763348E783AEF5562",
        "name": "Tether USD",
        "owner": "0x4a9196b06f339Ad9F3Ee752C987b401F2E1E2718",
        "symbol": "USDT",
        "totalSupply": 1798820496582617
      }
    },
    {
      "name": "ArbFiatToken",
      "address": "0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8",
      "upgradeability": {
        "type": "EIP1967 proxy",
        "implementation": "0x1eFB3f88Bc88f03FD1804A5C53b7141bbEf5dED8",
        "admin": "0xd570aCE65C43af47101fC6250FD6fC63D1c22a86"
      },
      "implementations": ["0x1eFB3f88Bc88f03FD1804A5C53b7141bbEf5dED8"],
      "sinceTimestamp": 1623868379,
      "values": {
        "blacklister": "0x13F2A44FaD26c2cc25d3e3b869364142ce5995Bb",
        "decimals": 6,
        "DOMAIN_SEPARATOR": "0xa074269f06a6961e917f3c53d7204a31a08aec9a5f4a5801e8a8f837483b62a0",
        "gatewayAddress": "0x096760F208390250649E3e8763348E783AEF5562",
        "l1Address": "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",
        "name": "USD Coin (Arb1)",
        "owner": "0x0000000000000000000000000000000000000001",
        "paused": false,
        "pauser": "0x0000000000000000000000000000000000000000",
        "symbol": "USDC",
        "totalSupply": 381157760802359
      }
    }
  ],
  "eoas": [
    "0x0000000000000000000000000000000000000001",
    "0x13F2A44FaD26c2cc25d3e3b869364142ce5995Bb",
    "0x25bB61643e4881147E6aabb65e6DD45CF2904155",
    "0x2E0A67588cfBCAD40f9e4DD76052436190A77a68",
    "0x36e3b4db327d9e66F5aE5A0200DCdbEF0D2E240B",
    "0x4096a34E582664F969753b34dA6E72D55b3C85C1",
    "0x4D915Dd2c56814BD3Db51a1dA35b302BCC9c8973",
    "0x5fD7D0d6b91CC4787Bcb86ca47e0Bd4ea0346d34",
    "0x61D5a4d5Bd270e59E9320243e574288e2a199fED",
    "0x72Ce9c846789fdB6fC1f34aC4AD25Dd9ef7031ef",
    "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",
    "0xa3A7B6F88361F48403514059F1F16C8E78d60EeC",
    "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",
    "0xc7a599037fDa4Ff8029df9a042Af6053d061ebc9",
    "0xcEe284F754E854890e311e3280b767F80797180d",
    "0xd92023E9d9911199a6711321D1277285e6d4e2db",
    "0xdAC17F958D2ee523a2206206994597C13D831ec7",
    "0xEdC4ed529B990DD4fFB9Ed47b6c3e385A9dcdd0A",
    "0xEe5207d3c88562fc814496Af0845B34CFD4afc8c",
    "0xf4B51B14b9EE30dc37EC970B50a486F37686E2a8"
  ],
  "abis": {
    "0x096760F208390250649E3e8763348E783AEF5562": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x09e9222E96E7B4AE2a407B98d48e330053351EEe": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x0a1040C23bc8d04669A118A27433D5B379C2D381": [
      "constructor(address owner_, uint32 chainSlug_, address socket_, address signatureVerifier_)",
      "error FeesTooHigh()",
      "error InsufficientFees()",
      "error InsufficientMsgValue()",
      "error InvalidMsgValue()",
      "error InvalidNonce()",
      "error InvalidTokenAddress()",
      "error MsgValueTooHigh()",
      "error MsgValueTooLow()",
      "error NoPermit(bytes32 role)",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error OnlySocket()",
      "error PayloadTooLarge()",
      "error UnequalArrayLengths()",
      "error ZeroAddress()",
      "event ExecutionFeesSet(uint256 siblingChainSlug, uint128 executionFees)",
      "event ExecutionFeesWithdrawn(address account, uint32 siblingChainSlug, uint256 amount)",
      "event MsgValueMaxThresholdSet(uint256 siblingChainSlug, uint256 msgValueMaxThresholdSet)",
      "event MsgValueMinThresholdSet(uint256 siblingChainSlug, uint256 msgValueMinThresholdSet)",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event RelativeNativeTokenPriceSet(uint256 siblingChainSlug, uint256 relativeNativeTokenPrice)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "event SwitchboardFeesWithdrawn(address switchboard, uint32 siblingChainSlug, uint256 amount)",
      "event TransmissionFeesWithdrawn(address transmitManager, uint32 siblingChainSlug, uint256 amount)",
      "function chainSlug() view returns (uint32)",
      "function claimOwner()",
      "function executionFees(uint32) view returns (uint128)",
      "function getExecutionTransmissionMinFees(uint256 minMsgGasLimit_, uint256 payloadSize_, bytes32 executionParams_, bytes32, uint32 siblingChainSlug_, address transmitManager_) view returns (uint128 minExecutionFee, uint128 transmissionFees)",
      "function getMinFees(uint256 gasLimit_, uint256 payloadSize_, bytes32 executionParams_, uint32 siblingChainSlug_) view returns (uint128 minExecutionFee)",
      "function grantBatchRole(bytes32[] roleNames_, uint32[] slugs_, address[] grantees_)",
      "function grantRole(bytes32 role_, address grantee_)",
      "function grantRoleWithSlug(bytes32 roleName_, uint32 chainSlug_, address grantee_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function hasRoleWithSlug(bytes32 roleName_, uint32 chainSlug_, address address_) view returns (bool)",
      "function isExecutor(bytes32 packedMessage, bytes sig) view returns (address executor, bool isValidExecutor)",
      "function msgValueMaxThreshold(uint32) view returns (uint256)",
      "function msgValueMinThreshold(uint32) view returns (uint256)",
      "function nextNonce(address) view returns (uint256)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function payAndCheckFees(uint256 minMsgGasLimit_, uint256 payloadSize_, bytes32 executionParams_, bytes32, uint32 siblingChainSlug_, uint128 switchboardFees_, uint128 verificationOverheadFees_, address transmitManager_, address switchboard_, uint256 maxPacketLength_) payable returns (uint128 executionFee, uint128 transmissionFees)",
      "function relativeNativeTokenPrice(uint32) view returns (uint256)",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function revokeBatchRole(bytes32[] roleNames_, uint32[] slugs_, address[] grantees_)",
      "function revokeRole(bytes32 role_, address revokee_)",
      "function revokeRoleWithSlug(bytes32 roleName_, uint32 chainSlug_, address grantee_)",
      "function setExecutionFees(uint256 nonce_, uint32 siblingChainSlug_, uint128 executionFees_, bytes signature_)",
      "function setMsgValueMaxThreshold(uint256 nonce_, uint32 siblingChainSlug_, uint256 msgValueMaxThreshold_, bytes signature_)",
      "function setMsgValueMinThreshold(uint256 nonce_, uint32 siblingChainSlug_, uint256 msgValueMinThreshold_, bytes signature_)",
      "function setRelativeNativeTokenPrice(uint256 nonce_, uint32 siblingChainSlug_, uint256 relativeNativeTokenPrice_, bytes signature_)",
      "function setTransmissionMinFees(uint32 remoteChainSlug_, uint128 fees_)",
      "function signatureVerifier__() view returns (address)",
      "function socket__() view returns (address)",
      "function totalExecutionAndTransmissionFees(uint32) view returns (uint128 totalExecutionFees, uint128 totalTransmissionFees)",
      "function totalSwitchboardFees(address, uint32) view returns (uint128)",
      "function transmissionMinFees(address, uint32) view returns (uint128)",
      "function updateExecutionFees(address, uint128, bytes32) view",
      "function verifyParams(bytes32 executionParams_, uint256 msgValue_) pure",
      "function withdrawExecutionFees(uint32 siblingChainSlug_, uint128 amount_, address withdrawTo_)",
      "function withdrawSwitchboardFees(uint32 siblingChainSlug_, address switchboard_, uint128 amount_)",
      "function withdrawTransmissionFees(uint32 siblingChainSlug_, uint128 amount_)"
    ],
    "0x190274fEa8f30e3f48CE43aDCBd9a74110118284": [
      "event DepositFinalized(address indexed l1Token, address indexed _from, address indexed _to, uint256 _amount)",
      "event TokenSet(address indexed l1Address, address indexed l2Address)",
      "event TxToL1(address indexed _from, address indexed _to, uint256 indexed _id, bytes _data)",
      "event WithdrawalInitiated(address l1Token, address indexed _from, address indexed _to, uint256 indexed _l2ToL1Id, uint256 _exitNum, uint256 _amount)",
      "function calculateL2TokenAddress(address l1ERC20) view returns (address)",
      "function counterpartGateway() view returns (address)",
      "function exitNum() view returns (uint256)",
      "function finalizeInboundTransfer(address _token, address _from, address _to, uint256 _amount, bytes _data) payable",
      "function getOutboundCalldata(address _token, address _from, address _to, uint256 _amount, bytes _data) view returns (bytes outboundCalldata)",
      "function initialize(address _l1Counterpart, address _router)",
      "function l1ToL2Token(address) view returns (address)",
      "function outboundTransfer(address _l1Token, address _to, uint256 _amount, bytes _data) payable returns (bytes)",
      "function outboundTransfer(address _l1Token, address _to, uint256 _amount, uint256, uint256, bytes _data) payable returns (bytes res)",
      "function postUpgradeInit()",
      "function registerTokenFromL1(address[] l1Address, address[] l2Address)",
      "function router() view returns (address)"
    ],
    "0x1DCf7D03574fbC7C205F41f2e116eE094a652e93": [
      "event DepositFinalized(address indexed l1Token, address indexed _from, address indexed _to, uint256 _amount)",
      "event TxToL1(address indexed _from, address indexed _to, uint256 indexed _id, bytes _data)",
      "event WithdrawalInitiated(address l1Token, address indexed _from, address indexed _to, uint256 indexed _l2ToL1Id, uint256 _exitNum, uint256 _amount)",
      "function beaconProxyFactory() view returns (address)",
      "function calculateL2TokenAddress(address l1ERC20) view returns (address)",
      "function cloneableProxyHash() view returns (bytes32)",
      "function counterpartGateway() view returns (address)",
      "function exitNum() view returns (uint256)",
      "function finalizeInboundTransfer(address _token, address _from, address _to, uint256 _amount, bytes _data) payable",
      "function getOutboundCalldata(address _token, address _from, address _to, uint256 _amount, bytes _data) view returns (bytes outboundCalldata)",
      "function getUserSalt(address l1ERC20) pure returns (bytes32)",
      "function initialize(address _l1Counterpart, address _router, address _beaconProxyFactory)",
      "function outboundTransfer(address _l1Token, address _to, uint256 _amount, bytes _data) payable returns (bytes)",
      "function outboundTransfer(address _l1Token, address _to, uint256 _amount, uint256, uint256, bytes _data) payable returns (bytes res)",
      "function postUpgradeInit()",
      "function router() view returns (address)"
    ],
    "0x1eFB3f88Bc88f03FD1804A5C53b7141bbEf5dED8": [
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event Blacklisted(address indexed account)",
      "event BlacklisterChanged(address indexed newBlacklister)",
      "event OwnerChanged(address indexed previousOwner, address indexed newOwner)",
      "event Paused(address pauser)",
      "event PauserChanged(address indexed previousPauser, address indexed newPauser)",
      "event Transfer(address indexed from, address indexed to, uint256 value, bytes data)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "event UnBlacklisted(address indexed account)",
      "event Unpaused(address pauser)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function blacklist(address account)",
      "function blacklister() view returns (address)",
      "function bridgeBurn(address account, uint256 amount)",
      "function bridgeInit(address _l1Address, bytes _data)",
      "function bridgeMint(address account, uint256 amount)",
      "function changeOwner(address account)",
      "function decimals() view returns (uint8)",
      "function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
      "function gatewayAddress() view returns (address)",
      "function increaseAllowance(address spender, uint256 addedValue) returns (bool)",
      "function initialize(string name, string symbol, uint8 decimals)",
      "function initialize(address _gatewayAddress, address _l1Address, address owner, string name, string symbol, uint8 decimals)",
      "function isBlacklisted(address account) view returns (bool)",
      "function l1Address() view returns (address)",
      "function name() view returns (string)",
      "function nonces(address owner) view returns (uint256)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function pauser() view returns (address)",
      "function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)",
      "function setPauser(address account)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address recipient, uint256 amount) returns (bool)",
      "function transferAndCall(address to, uint256 value, bytes data) returns (bool success)",
      "function transferFrom(address sender, address recipient, uint256 amount) returns (bool)",
      "function unBlacklist(address account)",
      "function unpause()",
      "function updateBlacklister(address newBlacklister)"
    ],
    "0x2f2a2543B76A4166549F7aaB2e75Bef0aefC5B0f": ["constructor()"],
    "0x37cc674582049b579571E2fFd890a4d99355f6Ba": [
      "constructor(uint32 chainSlug_, address hasher_, address capacitorFactory_, address owner_, string version_)",
      "error ErrInSourceValidation()",
      "error InvalidCapacitorAddress()",
      "error InvalidConnection()",
      "error InvalidPacketId()",
      "error InvalidProof()",
      "error InvalidTokenAddress()",
      "error InvalidTransmitter()",
      "error LowGasLimit()",
      "error MessageAlreadyExecuted()",
      "error NoPermit(bytes32 role)",
      "error NotExecutor()",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error PacketNotProposed()",
      "error PlugDisconnected()",
      "error SwitchboardExists()",
      "error UnequalArrayLengths()",
      "error VerificationFailed()",
      "error ZeroAddress()",
      "event CapacitorFactorySet(address capacitorFactory)",
      "event ExecutionManagerSet(address executionManager)",
      "event ExecutionSuccess(bytes32 msgId)",
      "event HasherSet(address hasher)",
      "event MessageOutbound(uint32 localChainSlug, address localPlug, uint32 dstChainSlug, address dstPlug, bytes32 msgId, uint256 minMsgGasLimit, bytes32 executionParams, bytes32 transmissionParams, bytes payload, tuple(uint128 transmissionFees, uint128 executionFee, uint128 switchboardFees) fees)",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event PacketProposed(address indexed transmitter, bytes32 indexed packetId, uint256 proposalCount, bytes32 root, address switchboard)",
      "event PlugConnected(address plug, uint32 siblingChainSlug, address siblingPlug, address inboundSwitchboard, address outboundSwitchboard, address capacitor, address decapacitor)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "event Sealed(address indexed transmitter, bytes32 indexed packetId, uint256 batchSize, bytes32 root, bytes signature)",
      "event SiblingSwitchboardUpdated(address switchboard, uint32 siblingChainSlug, address siblingSwitchboard)",
      "event SwitchboardAdded(address switchboard, uint32 siblingChainSlug, address capacitor, address decapacitor, uint256 maxPacketLength, uint256 capacitorType)",
      "event TransmitManagerSet(address transmitManager)",
      "function capacitorFactory__() view returns (address)",
      "function capacitorToSlug(address) view returns (uint32)",
      "function capacitors__(address, uint32) view returns (address)",
      "function chainSlug() view returns (uint32)",
      "function claimOwner()",
      "function connect(uint32 siblingChainSlug_, address siblingPlug_, address inboundSwitchboard_, address outboundSwitchboard_)",
      "function decapacitors__(address, uint32) view returns (address)",
      "function execute(tuple(bytes32 packetId, uint256 proposalCount, uint256 executionGasLimit, bytes decapacitorProof, bytes signature) executionDetails_, tuple(bytes32 msgId, uint256 executionFee, uint256 minMsgGasLimit, bytes32 executionParams, bytes payload) messageDetails_) payable",
      "function executionManager__() view returns (address)",
      "function getMinFees(uint256 minMsgGasLimit_, uint256 payloadSize_, bytes32 executionParams_, bytes32 transmissionParams_, uint32 siblingChainSlug_, address plug_) view returns (uint256 totalFees)",
      "function getPlugConfig(address plugAddress_, uint32 siblingChainSlug_) view returns (address siblingPlug, address inboundSwitchboard__, address outboundSwitchboard__, address capacitor__, address decapacitor__)",
      "function globalMessageCount() view returns (uint64)",
      "function grantBatchRole(bytes32[] roleNames_, uint32[] slugs_, address[] grantees_)",
      "function grantRole(bytes32 role_, address grantee_)",
      "function grantRoleWithSlug(bytes32 roleName_, uint32 chainSlug_, address grantee_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function hasRoleWithSlug(bytes32 roleName_, uint32 chainSlug_, address address_) view returns (bool)",
      "function hasher__() view returns (address)",
      "function isPacketProposed(bytes32 packetId_, uint256 proposalCount_, address switchboard_) view returns (bool)",
      "function messageExecuted(bytes32) view returns (bool)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function outbound(uint32 siblingChainSlug_, uint256 minMsgGasLimit_, bytes32 executionParams_, bytes32 transmissionParams_, bytes payload_) payable returns (bytes32 msgId)",
      "function owner() view returns (address)",
      "function packetIdRoots(bytes32, uint256, address) view returns (bytes32)",
      "function proposalCount(bytes32) view returns (uint256)",
      "function proposeForSwitchboard(bytes32 packetId_, bytes32 root_, address switchboard_, bytes signature_) payable",
      "function registerSwitchboardForSibling(uint32 siblingChainSlug_, uint256 maxPacketLength_, uint256 capacitorType_, address siblingSwitchboard_) returns (address capacitor, address decapacitor)",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function revokeBatchRole(bytes32[] roleNames_, uint32[] slugs_, address[] grantees_)",
      "function revokeRole(bytes32 role_, address revokee_)",
      "function revokeRoleWithSlug(bytes32 roleName_, uint32 chainSlug_, address grantee_)",
      "function rootProposedAt(bytes32, uint256, address) view returns (uint256)",
      "function seal(uint256 batchSize_, address capacitorAddress_, bytes signature_) payable",
      "function setCapacitorFactory(address capacitorFactory_)",
      "function setExecutionManager(address executionManager_)",
      "function setHasher(address hasher_)",
      "function setTransmitManager(address transmitManager_)",
      "function transmitManager__() view returns (address)",
      "function useSiblingSwitchboard(uint32 siblingChainSlug_, address siblingSwitchboard_)",
      "function version() view returns (bytes32)"
    ],
    "0x3D20c6A2b719129af175E0ff7B1875DEb360896f": [
      "constructor(address token_)",
      "error AmountOutsideLimit()",
      "error ConnectorUnavailable()",
      "error InvalidTokenAddress()",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error ZeroAddress()",
      "error ZeroAmount()",
      "event LimitParamsUpdated(tuple(bool isLock, address connector, uint256 maxLimit, uint256 ratePerSecond)[] updates)",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event PendingTokensTransferred(address connector, address receiver, uint256 unlockedAmount, uint256 pendingAmount)",
      "event TokensDeposited(address connector, address depositor, address receiver, uint256 depositAmount)",
      "event TokensPending(address connector, address receiver, uint256 pendingAmount, uint256 totalPendingAmount)",
      "event TokensUnlocked(address connector, address receiver, uint256 unlockedAmount)",
      "function claimOwner()",
      "function connectorPendingUnlocks(address) view returns (uint256)",
      "function depositToAppChain(address receiver_, uint256 amount_, uint256 msgGasLimit_, address connector_) payable",
      "function getCurrentLockLimit(address connector_) view returns (uint256)",
      "function getCurrentUnlockLimit(address connector_) view returns (uint256)",
      "function getLockLimitParams(address connector_) view returns (tuple(uint256 lastUpdateTimestamp, uint256 ratePerSecond, uint256 maxLimit, uint256 lastUpdateLimit))",
      "function getMinFees(address connector_, uint256 msgGasLimit_) view returns (uint256 totalFees)",
      "function getUnlockLimitParams(address connector_) view returns (tuple(uint256 lastUpdateTimestamp, uint256 ratePerSecond, uint256 maxLimit, uint256 lastUpdateLimit))",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function pendingUnlocks(address, address) view returns (uint256)",
      "function receiveInbound(bytes payload_)",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function token__() view returns (address)",
      "function unlockPendingFor(address receiver_, address connector_)",
      "function updateLimitParams(tuple(bool isLock, address connector, uint256 maxLimit, uint256 ratePerSecond)[] updates_)"
    ],
    "0x3fE38087A94903A9D946fa1915e1772fe611000f": [
      "function beacon() view returns (address)",
      "function calculateExpectedAddress(bytes32 salt) view returns (address)",
      "function calculateExpectedAddress(address user, bytes32 userSalt) view returns (address)",
      "function cloneableProxyHash() view returns (bytes32)",
      "function createProxy(bytes32 userSalt) returns (address)",
      "function getSalt(address user, bytes32 userSalt) pure returns (bytes32)",
      "function initialize(address _beacon)"
    ],
    "0x4a9196b06f339Ad9F3Ee752C987b401F2E1E2718": [
      "function owners(uint256) view returns (address)",
      "function removeOwner(address owner)",
      "function revokeConfirmation(uint256 transactionId)",
      "function isOwner(address) view returns (bool)",
      "function confirmations(uint256, address) view returns (bool)",
      "function getTransactionCount(bool pending, bool executed) view returns (uint256 count)",
      "function addOwner(address owner)",
      "function isConfirmed(uint256 transactionId) view returns (bool)",
      "function getConfirmationCount(uint256 transactionId) view returns (uint256 count)",
      "function transactions(uint256) view returns (address destination, uint256 value, bytes data, bool executed)",
      "function getOwners() view returns (address[])",
      "function getTransactionIds(uint256 from, uint256 to, bool pending, bool executed) view returns (uint256[] _transactionIds)",
      "function getConfirmations(uint256 transactionId) view returns (address[] _confirmations)",
      "function transactionCount() view returns (uint256)",
      "function changeRequirement(uint256 _required)",
      "function confirmTransaction(uint256 transactionId)",
      "function submitTransaction(address destination, uint256 value, bytes data) returns (uint256 transactionId)",
      "function MAX_OWNER_COUNT() view returns (uint256)",
      "function required() view returns (uint256)",
      "function replaceOwner(address owner, address newOwner)",
      "function executeTransaction(uint256 transactionId)",
      "constructor(address[] _owners, uint256 _required)",
      "event Confirmation(address indexed sender, uint256 indexed transactionId)",
      "event Revocation(address indexed sender, uint256 indexed transactionId)",
      "event Submission(uint256 indexed transactionId)",
      "event Execution(uint256 indexed transactionId)",
      "event ExecutionFailure(uint256 indexed transactionId)",
      "event Deposit(address indexed sender, uint256 value)",
      "event OwnerAddition(address indexed owner)",
      "event OwnerRemoval(address indexed owner)",
      "event RequirementChange(uint256 required)"
    ],
    "0x5288c571Fd7aD117beA99bF60FE0846C4E84F933": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x553ec478A66BE27Ba25A6bc5dB20AEc2eD6A1B4A": [
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function changeProxyAdmin(address proxy, address newAdmin)",
      "function getProxyAdmin(address proxy) view returns (address)",
      "function getProxyImplementation(address proxy) view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function upgrade(address proxy, address implementation)",
      "function upgradeAndCall(address proxy, address implementation, bytes data) payable"
    ],
    "0x5e027ad442e031424b5a2C0ad6f656662Be32882": [
      "constructor(address token_)",
      "error AmountOutsideLimit()",
      "error ConnectorUnavailable()",
      "error InvalidTokenAddress()",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error ZeroAddress()",
      "error ZeroAmount()",
      "event LimitParamsUpdated(tuple(bool isLock, address connector, uint256 maxLimit, uint256 ratePerSecond)[] updates)",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event PendingTokensTransferred(address connector, address receiver, uint256 unlockedAmount, uint256 pendingAmount)",
      "event TokensDeposited(address connector, address depositor, address receiver, uint256 depositAmount)",
      "event TokensPending(address connector, address receiver, uint256 pendingAmount, uint256 totalPendingAmount)",
      "event TokensUnlocked(address connector, address receiver, uint256 unlockedAmount)",
      "function claimOwner()",
      "function connectorPendingUnlocks(address) view returns (uint256)",
      "function depositToAppChain(address receiver_, uint256 amount_, uint256 msgGasLimit_, address connector_) payable",
      "function getCurrentLockLimit(address connector_) view returns (uint256)",
      "function getCurrentUnlockLimit(address connector_) view returns (uint256)",
      "function getLockLimitParams(address connector_) view returns (tuple(uint256 lastUpdateTimestamp, uint256 ratePerSecond, uint256 maxLimit, uint256 lastUpdateLimit))",
      "function getMinFees(address connector_, uint256 msgGasLimit_) view returns (uint256 totalFees)",
      "function getUnlockLimitParams(address connector_) view returns (tuple(uint256 lastUpdateTimestamp, uint256 ratePerSecond, uint256 maxLimit, uint256 lastUpdateLimit))",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function pendingUnlocks(address, address) view returns (uint256)",
      "function receiveInbound(bytes payload_)",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function token__() view returns (address)",
      "function unlockPendingFor(address receiver_, address connector_)",
      "function updateLimitParams(tuple(bool isLock, address connector, uint256 maxLimit, uint256 ratePerSecond)[] updates_)"
    ],
    "0x6c411aD3E74De3E7Bd422b94A27770f5B86C623B": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x7A013834D54e9B22d1978aAe3aaDDC909Aa79115": [
      "constructor()",
      "event Initialized(uint8 version)",
      "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
      "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
      "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
      "event UpgradeExecuted(address indexed upgrade, uint256 value, bytes data)",
      "function ADMIN_ROLE() view returns (bytes32)",
      "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
      "function EXECUTOR_ROLE() view returns (bytes32)",
      "function execute(address upgrade, bytes upgradeCallData) payable",
      "function getRoleAdmin(bytes32 role) view returns (bytes32)",
      "function grantRole(bytes32 role, address account)",
      "function hasRole(bytes32 role, address account) view returns (bool)",
      "function initialize(address admin, address[] executors)",
      "function renounceRole(bytes32 role, address account)",
      "function revokeRole(bytes32 role, address account)",
      "function supportsInterface(bytes4 interfaceId) view returns (bool)"
    ],
    "0x806421D09cDb253aa9d128a658e60c0B95eFFA01": [
      "event DepositFinalized(address indexed l1Token, address indexed _from, address indexed _to, uint256 _amount)",
      "event TxToL1(address indexed _from, address indexed _to, uint256 indexed _id, bytes _data)",
      "event WithdrawalInitiated(address l1Token, address indexed _from, address indexed _to, uint256 indexed _l2ToL1Id, uint256 _exitNum, uint256 _amount)",
      "function calculateL2TokenAddress(address l1ERC20) view returns (address)",
      "function counterpartGateway() view returns (address)",
      "function exitNum() view returns (uint256)",
      "function finalizeInboundTransfer(address _token, address _from, address _to, uint256 _amount, bytes _data) payable",
      "function getOutboundCalldata(address _token, address _from, address _to, uint256 _amount, bytes _data) view returns (bytes outboundCalldata)",
      "function initialize(address _l1Counterpart, address _router, address _l1Weth, address _l2Weth)",
      "function l1Weth() view returns (address)",
      "function l2Weth() view returns (address)",
      "function outboundTransfer(address _l1Token, address _to, uint256 _amount, bytes _data) payable returns (bytes)",
      "function outboundTransfer(address _l1Token, address _to, uint256 _amount, uint256, uint256, bytes _data) payable returns (bytes res)",
      "function postUpgradeInit()",
      "function router() view returns (address)"
    ],
    "0x82aF49447D8a07e3bd95BD0d56f35241523fBab1": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0x86E721b43d4ECFa71119Dd38c0f938A75Fdb57B3": [
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event AuthorizationCanceled(address indexed authorizer, bytes32 indexed nonce)",
      "event AuthorizationUsed(address indexed authorizer, bytes32 indexed nonce)",
      "event Blacklisted(address indexed _account)",
      "event BlacklisterChanged(address indexed newBlacklister)",
      "event Burn(address indexed burner, uint256 amount)",
      "event MasterMinterChanged(address indexed newMasterMinter)",
      "event Mint(address indexed minter, address indexed to, uint256 amount)",
      "event MinterConfigured(address indexed minter, uint256 minterAllowedAmount)",
      "event MinterRemoved(address indexed oldMinter)",
      "event OwnershipTransferred(address previousOwner, address newOwner)",
      "event Pause()",
      "event PauserChanged(address indexed newAddress)",
      "event RescuerChanged(address indexed newRescuer)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "event UnBlacklisted(address indexed _account)",
      "event Unpause()",
      "function CANCEL_AUTHORIZATION_TYPEHASH() view returns (bytes32)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function PERMIT_TYPEHASH() view returns (bytes32)",
      "function RECEIVE_WITH_AUTHORIZATION_TYPEHASH() view returns (bytes32)",
      "function TRANSFER_WITH_AUTHORIZATION_TYPEHASH() view returns (bytes32)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 value) returns (bool)",
      "function authorizationState(address authorizer, bytes32 nonce) view returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function blacklist(address _account)",
      "function blacklister() view returns (address)",
      "function burn(uint256 _amount)",
      "function cancelAuthorization(address authorizer, bytes32 nonce, uint8 v, bytes32 r, bytes32 s)",
      "function cancelAuthorization(address authorizer, bytes32 nonce, bytes signature)",
      "function configureMinter(address minter, uint256 minterAllowedAmount) returns (bool)",
      "function currency() view returns (string)",
      "function decimals() view returns (uint8)",
      "function decreaseAllowance(address spender, uint256 decrement) returns (bool)",
      "function increaseAllowance(address spender, uint256 increment) returns (bool)",
      "function initialize(string tokenName, string tokenSymbol, string tokenCurrency, uint8 tokenDecimals, address newMasterMinter, address newPauser, address newBlacklister, address newOwner)",
      "function initializeV2(string newName)",
      "function initializeV2_1(address lostAndFound)",
      "function initializeV2_2(address[] accountsToBlacklist, string newSymbol)",
      "function isBlacklisted(address _account) view returns (bool)",
      "function isMinter(address account) view returns (bool)",
      "function masterMinter() view returns (address)",
      "function mint(address _to, uint256 _amount) returns (bool)",
      "function minterAllowance(address minter) view returns (uint256)",
      "function name() view returns (string)",
      "function nonces(address owner) view returns (uint256)",
      "function owner() view returns (address)",
      "function pause()",
      "function paused() view returns (bool)",
      "function pauser() view returns (address)",
      "function permit(address owner, address spender, uint256 value, uint256 deadline, bytes signature)",
      "function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)",
      "function receiveWithAuthorization(address from, address to, uint256 value, uint256 validAfter, uint256 validBefore, bytes32 nonce, bytes signature)",
      "function receiveWithAuthorization(address from, address to, uint256 value, uint256 validAfter, uint256 validBefore, bytes32 nonce, uint8 v, bytes32 r, bytes32 s)",
      "function removeMinter(address minter) returns (bool)",
      "function rescueERC20(address tokenContract, address to, uint256 amount)",
      "function rescuer() view returns (address)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address to, uint256 value) returns (bool)",
      "function transferFrom(address from, address to, uint256 value) returns (bool)",
      "function transferOwnership(address newOwner)",
      "function transferWithAuthorization(address from, address to, uint256 value, uint256 validAfter, uint256 validBefore, bytes32 nonce, bytes signature)",
      "function transferWithAuthorization(address from, address to, uint256 value, uint256 validAfter, uint256 validBefore, bytes32 nonce, uint8 v, bytes32 r, bytes32 s)",
      "function unBlacklist(address _account)",
      "function unpause()",
      "function updateBlacklister(address _newBlacklister)",
      "function updateMasterMinter(address _newMasterMinter)",
      "function updatePauser(address _newPauser)",
      "function updateRescuer(address newRescuer)",
      "function version() pure returns (string)"
    ],
    "0x8aFf09e2259cacbF4Fc4e3E53F3bf799EfEEab36": [
      "constructor(address _minterManager)",
      "event ControllerConfigured(address indexed _controller, address indexed _worker)",
      "event ControllerRemoved(address indexed _controller)",
      "event MinterAllowanceDecremented(address indexed msgSender, address indexed minter, uint256 decrement, uint256 newAllowance)",
      "event MinterAllowanceIncremented(address indexed _msgSender, address indexed _minter, uint256 _increment, uint256 _newAllowance)",
      "event MinterConfigured(address indexed _msgSender, address indexed _minter, uint256 _allowance)",
      "event MinterManagerSet(address indexed _oldMinterManager, address indexed _newMinterManager)",
      "event MinterRemoved(address indexed _msgSender, address indexed _minter)",
      "event OwnershipTransferred(address previousOwner, address newOwner)",
      "function configureController(address _controller, address _worker)",
      "function configureMinter(uint256 _newAllowance) returns (bool)",
      "function decrementMinterAllowance(uint256 _allowanceDecrement) returns (bool)",
      "function getMinterManager() view returns (address)",
      "function getWorker(address _controller) view returns (address)",
      "function incrementMinterAllowance(uint256 _allowanceIncrement) returns (bool)",
      "function owner() view returns (address)",
      "function removeController(address _controller)",
      "function removeMinter() returns (bool)",
      "function setMinterManager(address _newMinterManager)",
      "function transferOwnership(address newOwner)"
    ],
    "0x8b194bEae1d3e0788A1a35173978001ACDFba668": [
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event Transfer(address indexed from, address indexed to, uint256 value, bytes data)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function allowance(address owner, address spender) view returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function bridgeBurn(address account, uint256 amount)",
      "function bridgeMint(address account, uint256 amount)",
      "function decimals() view returns (uint8)",
      "function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
      "function deposit() payable",
      "function depositTo(address account) payable",
      "function increaseAllowance(address spender, uint256 addedValue) returns (bool)",
      "function initialize(string _name, string _symbol, uint8 _decimals, address _l2Gateway, address _l1Address)",
      "function l1Address() view returns (address)",
      "function l2Gateway() view returns (address)",
      "function name() view returns (string)",
      "function nonces(address owner) view returns (uint256)",
      "function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address recipient, uint256 amount) returns (bool)",
      "function transferAndCall(address _to, uint256 _value, bytes _data) returns (bool success)",
      "function transferFrom(address sender, address recipient, uint256 amount) returns (bool)",
      "function withdraw(uint256 amount)",
      "function withdrawTo(address account, uint256 amount)"
    ],
    "0x8e9f58E6c206CB9C98aBb9F235E0f02D65dFc922": [
      "constructor(address token_)",
      "error AmountOutsideLimit()",
      "error ConnectorUnavailable()",
      "error InvalidTokenAddress()",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error ZeroAddress()",
      "error ZeroAmount()",
      "event LimitParamsUpdated(tuple(bool isLock, address connector, uint256 maxLimit, uint256 ratePerSecond)[] updates)",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event PendingTokensTransferred(address connector, address receiver, uint256 unlockedAmount, uint256 pendingAmount)",
      "event TokensDeposited(address connector, address depositor, address receiver, uint256 depositAmount)",
      "event TokensPending(address connector, address receiver, uint256 pendingAmount, uint256 totalPendingAmount)",
      "event TokensUnlocked(address connector, address receiver, uint256 unlockedAmount)",
      "function claimOwner()",
      "function connectorPendingUnlocks(address) view returns (uint256)",
      "function depositToAppChain(address receiver_, uint256 amount_, uint256 msgGasLimit_, address connector_) payable",
      "function getCurrentLockLimit(address connector_) view returns (uint256)",
      "function getCurrentUnlockLimit(address connector_) view returns (uint256)",
      "function getLockLimitParams(address connector_) view returns (tuple(uint256 lastUpdateTimestamp, uint256 ratePerSecond, uint256 maxLimit, uint256 lastUpdateLimit))",
      "function getMinFees(address connector_, uint256 msgGasLimit_) view returns (uint256 totalFees)",
      "function getUnlockLimitParams(address connector_) view returns (tuple(uint256 lastUpdateTimestamp, uint256 ratePerSecond, uint256 maxLimit, uint256 lastUpdateLimit))",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function pendingUnlocks(address, address) view returns (uint256)",
      "function receiveInbound(bytes payload_)",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function token__() view returns (address)",
      "function unlockPendingFor(address receiver_, address connector_)",
      "function updateLimitParams(tuple(bool isLock, address connector, uint256 maxLimit, uint256 ratePerSecond)[] updates_)"
    ],
    "0x9879a2b15722374243843DDdb79e5E6872aA74B8": [
      "constructor(address owner_)",
      "error InvalidSigLength()",
      "error InvalidTokenAddress()",
      "error NoPermit(bytes32 role)",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error ZeroAddress()",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "function claimOwner()",
      "function grantRole(bytes32 role_, address grantee_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function recoverSigner(bytes32 digest_, bytes signature_) pure returns (address signer)",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function revokeRole(bytes32 role_, address revokee_)"
    ],
    "0xaf88d065e77c8cC2239327C5EDb3A432268e5831": [
      "constructor(address implementationContract)",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address implementation)",
      "function admin() view returns (address)",
      "function changeAdmin(address newAdmin)",
      "function implementation() view returns (address)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0xb2Cb9aDA6e00118dA8E83a6A53dF1EC6331A60a6": [
      "constructor(address token_)",
      "error AmountOutsideLimit()",
      "error ConnectorUnavailable()",
      "error InvalidTokenAddress()",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error ZeroAddress()",
      "error ZeroAmount()",
      "event LimitParamsUpdated(tuple(bool isLock, address connector, uint256 maxLimit, uint256 ratePerSecond)[] updates)",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event PendingTokensTransferred(address connector, address receiver, uint256 unlockedAmount, uint256 pendingAmount)",
      "event TokensDeposited(address connector, address depositor, address receiver, uint256 depositAmount)",
      "event TokensPending(address connector, address receiver, uint256 pendingAmount, uint256 totalPendingAmount)",
      "event TokensUnlocked(address connector, address receiver, uint256 unlockedAmount)",
      "function claimOwner()",
      "function connectorPendingUnlocks(address) view returns (uint256)",
      "function depositToAppChain(address receiver_, uint256 amount_, uint256 msgGasLimit_, address connector_) payable",
      "function getCurrentLockLimit(address connector_) view returns (uint256)",
      "function getCurrentUnlockLimit(address connector_) view returns (uint256)",
      "function getLockLimitParams(address connector_) view returns (tuple(uint256 lastUpdateTimestamp, uint256 ratePerSecond, uint256 maxLimit, uint256 lastUpdateLimit))",
      "function getMinFees(address connector_, uint256 msgGasLimit_) view returns (uint256 totalFees)",
      "function getUnlockLimitParams(address connector_) view returns (tuple(uint256 lastUpdateTimestamp, uint256 ratePerSecond, uint256 maxLimit, uint256 lastUpdateLimit))",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function pendingUnlocks(address, address) view returns (uint256)",
      "function receiveInbound(bytes payload_)",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function token__() view returns (address)",
      "function unlockPendingFor(address receiver_, address connector_)",
      "function updateLimitParams(tuple(bool isLock, address connector, uint256 maxLimit, uint256 ratePerSecond)[] updates_)"
    ],
    "0xBce4Cd69FeFEdb6eb076CF67E55Bae858567136a": [
      "constructor(address owner_, uint256 maxAllowedPacketLength_)",
      "error InvalidCapacitorType()",
      "error InvalidTokenAddress()",
      "error NoPermit(bytes32 role)",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error PacketLengthNotAllowed()",
      "error ZeroAddress()",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "function claimOwner()",
      "function deploy(uint256 capacitorType_, uint32, uint256 maxPacketLength_) returns (address, address)",
      "function grantRole(bytes32 role_, address grantee_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function maxAllowedPacketLength() view returns (uint256)",
      "function minAllowedPacketLength() view returns (uint256)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function revokeRole(bytes32 role_, address revokee_)"
    ],
    "0xcDA819182c2BBE351644eD5D429280ab98004B4e": [
      "constructor(address owner_)",
      "error InvalidTokenAddress()",
      "error NoPermit(bytes32 role)",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error ZeroAddress()",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "function claimOwner()",
      "function grantRole(bytes32 role_, address grantee_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function packMessage(uint32 srcChainSlug_, address srcPlug_, uint32 dstChainSlug_, address dstPlug_, tuple(bytes32 msgId, uint256 executionFee, uint256 minMsgGasLimit, bytes32 executionParams, bytes payload) messageDetails_) pure returns (bytes32)",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function revokeRole(bytes32 role_, address revokee_)"
    ],
    "0xCF57572261c7c2BCF21ffD220ea7d1a27D40A827": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0xd570aCE65C43af47101fC6250FD6fC63D1c22a86": [
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function changeProxyAdmin(address proxy, address newAdmin)",
      "function getProxyAdmin(address proxy) view returns (address)",
      "function getProxyImplementation(address proxy) view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function upgrade(address proxy, address implementation)",
      "function upgradeAndCall(address proxy, address implementation, bytes data) payable"
    ],
    "0xd648A4f9db4AA872985b35B9ABB9Be642c0D7f2e": [
      "constructor(address owner_, uint32 chainSlug_, address socket_, address signatureVerifier_)",
      "error InvalidNonce()",
      "error InvalidTokenAddress()",
      "error NoPermit(bytes32 role)",
      "error OnlyExecutionManager()",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error UnequalArrayLengths()",
      "error ZeroAddress()",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event RoleGranted(bytes32 indexed role, address indexed grantee)",
      "event RoleRevoked(bytes32 indexed role, address indexed revokee)",
      "event SignatureVerifierSet(address signatureVerifier)",
      "event TransmissionFeesSet(uint256 dstChainSlug, uint256 transmissionFees)",
      "function chainSlug() view returns (uint32)",
      "function checkTransmitter(uint32 siblingSlug_, bytes32 digest_, bytes signature_) view returns (address, bool)",
      "function claimOwner()",
      "function grantBatchRole(bytes32[] roleNames_, uint32[] slugs_, address[] grantees_)",
      "function grantRole(bytes32 role_, address grantee_)",
      "function grantRoleWithSlug(bytes32 roleName_, uint32 chainSlug_, address grantee_)",
      "function hasRole(bytes32 role_, address address_) view returns (bool)",
      "function hasRoleWithSlug(bytes32 roleName_, uint32 chainSlug_, address address_) view returns (bool)",
      "function nextNonce(address) view returns (uint256)",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function receiveFees(uint32) payable",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function revokeBatchRole(bytes32[] roleNames_, uint32[] slugs_, address[] grantees_)",
      "function revokeRole(bytes32 role_, address revokee_)",
      "function revokeRoleWithSlug(bytes32 roleName_, uint32 chainSlug_, address grantee_)",
      "function setSignatureVerifier(address signatureVerifier_)",
      "function setTransmissionFees(uint256 nonce_, uint32 dstChainSlug_, uint128 transmissionFees_, bytes signature_)",
      "function signatureVerifier__() view returns (address)",
      "function socket__() view returns (address)",
      "function withdrawFees(address withdrawTo_)"
    ],
    "0xdb216562328215E010F819B5aBe947bad4ca961e": [
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "function changeProxyAdmin(address proxy, address newAdmin)",
      "function getProxyAdmin(address proxy) view returns (address)",
      "function getProxyImplementation(address proxy) view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function upgrade(address proxy, address implementation)",
      "function upgradeAndCall(address proxy, address implementation, bytes data) payable"
    ],
    "0xE72ba9418b5f2Ce0A6a40501Fe77c6839Aa37333": [
      "constructor(address implementation_)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Upgraded(address indexed implementation)",
      "function implementation() view returns (address)",
      "function owner() view returns (address)",
      "function renounceOwnership()",
      "function transferOwnership(address newOwner)",
      "function upgradeTo(address newImplementation)"
    ],
    "0xe80eb0238029333e368e0bDDB7acDf1b9cb28278": [
      "event DefaultGatewayUpdated(address newDefaultGateway)",
      "event GatewaySet(address indexed l1Token, address indexed gateway)",
      "event TransferRouted(address indexed token, address indexed _userFrom, address indexed _userTo, address gateway)",
      "event TxToL1(address indexed _from, address indexed _to, uint256 indexed _id, bytes _data)",
      "function calculateL2TokenAddress(address l1ERC20) view returns (address)",
      "function counterpartGateway() view returns (address)",
      "function defaultGateway() view returns (address)",
      "function finalizeInboundTransfer(address, address, address, uint256, bytes) payable",
      "function getGateway(address _token) view returns (address gateway)",
      "function getOutboundCalldata(address _token, address _from, address _to, uint256 _amount, bytes _data) view returns (bytes)",
      "function initialize(address _counterpartGateway, address _defaultGateway)",
      "function l1TokenToGateway(address) view returns (address)",
      "function outboundTransfer(address _l1Token, address _to, uint256 _amount, bytes _data) payable returns (bytes)",
      "function outboundTransfer(address _token, address _to, uint256 _amount, uint256 _maxGas, uint256 _gasPriceBid, bytes _data) payable returns (bytes)",
      "function postUpgradeInit()",
      "function router() view returns (address)",
      "function setDefaultGateway(address newL2DefaultGateway)",
      "function setGateway(address[] _l1Token, address[] _gateway)"
    ],
    "0xf31e1AE27e7cd057C1D6795a5a083E0453D39B50": [
      "event Approval(address indexed owner, address indexed spender, uint256 value)",
      "event BlockPlaced(address indexed _user)",
      "event BlockReleased(address indexed _user)",
      "event DestroyedBlockedFunds(address indexed _blockedUser, uint256 _balance)",
      "event Mint(address indexed _destination, uint256 _amount)",
      "event NewPrivilegedContract(address indexed _contract)",
      "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
      "event Redeem(uint256 _amount)",
      "event RemovedPrivilegedContract(address indexed _contract)",
      "event Transfer(address indexed from, address indexed to, uint256 value)",
      "function DOMAIN_SEPARATOR() view returns (bytes32)",
      "function addPrivilegedContract(address _trustedDeFiContract)",
      "function addToBlockedList(address _user)",
      "function allowance(address _owner, address _spender) view returns (uint256)",
      "function approve(address spender, uint256 amount) returns (bool)",
      "function balanceOf(address account) view returns (uint256)",
      "function bridgeBurn(address account, uint256 amount)",
      "function bridgeMint(address account, uint256 amount)",
      "function decimals() view returns (uint8)",
      "function decreaseAllowance(address spender, uint256 subtractedValue) returns (bool)",
      "function destroyBlockedFunds(address _blockedUser)",
      "function increaseAllowance(address spender, uint256 addedValue) returns (bool)",
      "function initialize(string _name, string _symbol, uint8 _decimals)",
      "function initialize(string _name, string _symbol, uint8 _decimals, address _l2Gateway, address _l1Counterpart)",
      "function isBlocked(address) view returns (bool)",
      "function isTrusted(address) view returns (bool)",
      "function l1Address() view returns (address)",
      "function l2Gateway() view returns (address)",
      "function mint(address _destination, uint256 _amount)",
      "function multiTransfer(address[] _recipients, uint256[] _values)",
      "function name() view returns (string)",
      "function nonces(address owner) view returns (uint256)",
      "function owner() view returns (address)",
      "function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)",
      "function redeem(uint256 _amount)",
      "function removeFromBlockedList(address _user)",
      "function removePrivilegedContract(address _trustedDeFiContract)",
      "function renounceOwnership()",
      "function symbol() view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transfer(address _recipient, uint256 _amount) returns (bool)",
      "function transferFrom(address _sender, address _recipient, uint256 _amount) returns (bool)",
      "function transferOwnership(address newOwner)"
    ],
    "0xFB7B06538d837e4212D72E2A38e6c074F9076E0B": [
      "constructor(address token_)",
      "error AmountOutsideLimit()",
      "error ConnectorUnavailable()",
      "error InvalidTokenAddress()",
      "error OnlyNominee()",
      "error OnlyOwner()",
      "error ZeroAddress()",
      "error ZeroAmount()",
      "event LimitParamsUpdated(tuple(bool isLock, address connector, uint256 maxLimit, uint256 ratePerSecond)[] updates)",
      "event OwnerClaimed(address indexed claimer)",
      "event OwnerNominated(address indexed nominee)",
      "event PendingTokensTransferred(address connector, address receiver, uint256 unlockedAmount, uint256 pendingAmount)",
      "event TokensDeposited(address connector, address depositor, address receiver, uint256 depositAmount)",
      "event TokensPending(address connector, address receiver, uint256 pendingAmount, uint256 totalPendingAmount)",
      "event TokensUnlocked(address connector, address receiver, uint256 unlockedAmount)",
      "function claimOwner()",
      "function connectorPendingUnlocks(address) view returns (uint256)",
      "function depositToAppChain(address receiver_, uint256 amount_, uint256 msgGasLimit_, address connector_) payable",
      "function getCurrentLockLimit(address connector_) view returns (uint256)",
      "function getCurrentUnlockLimit(address connector_) view returns (uint256)",
      "function getLockLimitParams(address connector_) view returns (tuple(uint256 lastUpdateTimestamp, uint256 ratePerSecond, uint256 maxLimit, uint256 lastUpdateLimit))",
      "function getMinFees(address connector_, uint256 msgGasLimit_) view returns (uint256 totalFees)",
      "function getUnlockLimitParams(address connector_) view returns (tuple(uint256 lastUpdateTimestamp, uint256 ratePerSecond, uint256 maxLimit, uint256 lastUpdateLimit))",
      "function nominateOwner(address nominee_)",
      "function nominee() view returns (address)",
      "function owner() view returns (address)",
      "function pendingUnlocks(address, address) view returns (uint256)",
      "function receiveInbound(bytes payload_)",
      "function rescueFunds(address token_, address rescueTo_, uint256 amount_)",
      "function token__() view returns (address)",
      "function unlockPendingFor(address receiver_, address connector_)",
      "function updateLimitParams(tuple(bool isLock, address connector, uint256 maxLimit, uint256 ratePerSecond)[] updates_)"
    ],
    "0xFd086bC7CD5C481DCC9C85ebE478A1C0b69FCbb9": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event BeaconUpgraded(address indexed beacon)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ],
    "0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8": [
      "constructor(address _logic, address admin_, bytes _data) payable",
      "event AdminChanged(address previousAdmin, address newAdmin)",
      "event Upgraded(address indexed implementation)",
      "function admin() returns (address admin_)",
      "function changeAdmin(address newAdmin)",
      "function implementation() returns (address implementation_)",
      "function upgradeTo(address newImplementation)",
      "function upgradeToAndCall(address newImplementation, bytes data) payable"
    ]
  }
}
